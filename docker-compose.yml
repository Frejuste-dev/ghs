version: '3.8'

services:
  # Base de donn√©es MySQL
  mysql:
    image: mysql:8.0
    container_name: ghs_mysql
    environment:
      MYSQL_ROOT_PASSWORD: Root@MySQLAdmin12
      MYSQL_DATABASE: ghs
      MYSQL_USER: ghs_user
      MYSQL_PASSWORD: ghs_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./ghs.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - ghs_network
    restart: unless-stopped

  # API FastAPI
  api:
    build: ./backend
    container_name: ghs_api
    environment:
      DB_USER: root
      DB_PASSWORD: Root@MySQLAdmin12
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ghs
      SECRET_KEY: your-super-secret-key-for-docker
      CORS_ORIGINS: "http://localhost:3000,http://localhost:80"
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - ghs_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React
  frontend:
    build: 
      context: ./frontend
      args:
        VITE_API_URL: http://localhost:8000
    container_name: ghs_frontend
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - ghs_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
volumes:
  mysql_data:

  # Reverse Proxy Nginx (optionnel pour la production)
  nginx:
    image: nginx:alpine
    container_name: ghs_nginx
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - api
    networks:
      - ghs_network
    restart: unless-stopped
    profiles:
    driver: local
      - production
networks:
  ghs_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16